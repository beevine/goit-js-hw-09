{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAAWJ,SAASC,cAAc,mBAsBxC,SAASI,EAAcC,EAAUC,GAC/B,MACMC,EAAW,C,SAAEF,E,MAAUC,GAC7B,OAFsBE,KAAKC,SAAW,GAG7BC,QAAQC,QAAQJ,GAEhBG,QAAQE,OAAOL,E,CA1B1BT,EAAKe,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAIC,iBACJ,IAAIC,EAAaC,OAAOhB,EAAWiB,OACnC,MAAMC,EAAYF,OAAOf,EAAUgB,OAEnC,IAAK,IAAIE,EAAI,EAAGA,GAAKjB,EAASe,MAAOE,IACnChB,EAAcgB,EAAGnB,GACdoB,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBV,EAAA0B,OAAOC,QAAQ,uBAAuBlB,QAAeC,MAAU,IAEhEkB,OAAM,EAACnB,SAAEA,EAAQC,MAAEA,MAClBV,EAAA0B,OAAOG,QAAQ,sBAAsBpB,QAAeC,MAAU,IAElEU,GAAcG,EAEhBrB,EAAK4B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst delayStart = document.querySelector(\"[name='delay']\");\nconst delayStep = document.querySelector(\"[name='step']\");\nconst delayQty = document.querySelector(\"[name='amount']\");\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  let firstDelay = Number(delayStart.value);\n  const nextDelay = Number(delayStep.value);\n\n  for (let i = 1; i <= delayQty.value; i++) {\n    createPromise(i, delayStart)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    firstDelay += nextDelay;\n  }\n  form.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const response = { position, delay };\n  if (shouldResolve) {\n    return Promise.resolve(response);\n  } else {\n    return Promise.reject(response);\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayStart","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$delayQty","$47d4ff9957288465$var$createPromise","position","delay","response","Math","random","Promise","resolve","reject","addEventListener","evt","preventDefault","firstDelay","Number","value","nextDelay","i","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.14f49a0b.js.map"}